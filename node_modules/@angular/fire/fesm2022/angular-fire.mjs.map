{"version":3,"file":"angular-fire.mjs","sources":["../../../src/core.ts","../../../src/zones.ts","../../../src/angular-fire.ts"],"sourcesContent":["import { Version } from '@angular/core';\nimport { ComponentContainer } from '@firebase/component';\nimport { FirebaseApp, getApps } from 'firebase/app';\nimport type { AppCheck } from 'firebase/app-check';\n\nexport const VERSION = new Version('ANGULARFIRE2_VERSION');\n\nexport const ɵisSupportedError = (module: string) =>\n  `The APP_INITIALIZER that is \"making\" isSupported() sync for the sake of convenient DI has not resolved in this\ncontext. Rather than injecting ${module} in the constructor, first ensure that ${module} is supported by calling\n\\`await isSupported()\\`, then retrieve the instance from the injector manually \\`injector.get(${module})\\`.`;\n\n// TODO is there a better way to get at the internal types?\ninterface FirebaseAppWithContainer extends FirebaseApp {\n  container: ComponentContainer;\n}\n\nexport function ɵgetDefaultInstanceOf<T= unknown>(identifier: string, provided: T[]|undefined, defaultApp: FirebaseApp): T|undefined  {\n  if (provided) {\n    // Was provide* only called once? If so grab that\n    if (provided.length === 1) { return provided[0]; }\n    const providedUsingDefaultApp = provided.filter((it: any) => it.app === defaultApp);\n    // Was provide* only called once, using the default app? If so use that\n    if (providedUsingDefaultApp.length === 1) { return providedUsingDefaultApp[0]; }\n  }\n  // Grab the default instance from the defaultApp\n  const defaultAppWithContainer: FirebaseAppWithContainer = defaultApp as any;\n  const provider = defaultAppWithContainer.container.getProvider(identifier as never);\n  return provider.getImmediate({ optional: true });\n}\n\nexport const ɵgetAllInstancesOf = <T= unknown>(identifier: string, app?: FirebaseApp): T[] => {\n  const apps = app ? [app] : getApps();\n  const instances: any[] = [];\n  apps.forEach((app: FirebaseAppWithContainer) => {\n    const provider: any = app.container.getProvider(identifier as never);\n    provider.instances.forEach((instance: any) => {\n      if (!instances.includes(instance)) {\n        instances.push(instance);\n      }\n    });\n  });\n  return instances;\n};\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface ɵAppCheckInstances extends Array<AppCheck> {}\n\nexport class ɵAppCheckInstances {\n  constructor() {\n    return ɵgetAllInstancesOf<AppCheck>(ɵAPP_CHECK_PROVIDER_NAME);\n  }\n}\n\nexport const ɵAPP_CHECK_PROVIDER_NAME = 'app-check';\n","/* eslint-disable @typescript-eslint/ban-ts-comment */\nimport {\n  Injectable,\n  Injector,\n  NgZone,\n  PendingTasks,\n  inject,\n  isDevMode,\n  runInInjectionContext\n} from '@angular/core';\nimport { pendingUntilEvent } from '@angular/core/rxjs-interop';\nimport {\n  Observable,\n  SchedulerAction,\n  SchedulerLike,\n  Subscription,\n  asyncScheduler,\n  queueScheduler\n} from 'rxjs';\nimport { observeOn, subscribeOn } from 'rxjs/operators';\n\ndeclare const Zone: {current: unknown} | undefined; \n\n/**\n * Schedules tasks so that they are invoked inside the Zone that is passed in the constructor.\n */\nexport class ɵZoneScheduler implements SchedulerLike {\n  constructor(private zone: any, private delegate: any = queueScheduler) {\n  }\n\n  now() {\n    return this.delegate.now();\n  }\n\n  schedule(work: (this: SchedulerAction<any>, state?: any) => void, delay?: number, state?: any): Subscription {\n    const targetZone = this.zone;\n    // Wrap the specified work function to make sure that if nested scheduling takes place the\n    // work is executed in the correct zone\n    const workInZone = function(this: SchedulerAction<any>, state: any) {\n      if (targetZone) {\n        targetZone.runGuarded(() => {\n          work.apply(this, [state]);\n        });\n      } else {\n        work.apply(this, [state]);\n      }\n    };\n\n    // Scheduling itself needs to be run in zone to ensure setInterval calls for async scheduling are done\n    // inside the correct zone. This scheduler needs to schedule asynchronously always to ensure that\n    // firebase emissions are never synchronous. Specifying a delay causes issues with the queueScheduler delegate.\n    return this.delegate.schedule(workInZone, delay, state);\n  }\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ɵAngularFireSchedulers {\n  public readonly outsideAngular: ɵZoneScheduler;\n  public readonly insideAngular: ɵZoneScheduler;\n\n  constructor() {\n    const ngZone = inject(NgZone);\n    this.outsideAngular = ngZone.runOutsideAngular(\n      () => new ɵZoneScheduler(typeof Zone === 'undefined' ? undefined : Zone.current)\n    );\n    this.insideAngular = ngZone.run(\n      () => new ɵZoneScheduler(\n        typeof Zone === 'undefined' ? undefined : Zone.current,\n        asyncScheduler\n      )\n    );\n  }\n}\n\nfunction getSchedulers() {\n  return inject(ɵAngularFireSchedulers);\n}\n\nvar alreadyWarned = false;\nfunction warnOutsideInjectionContext(original: any, operation: string) {\n  if (isDevMode()) {\n    if (!alreadyWarned) {\n      alreadyWarned = true;\n      console.warn(\"Calling Firebase APIs outside of an Injection context may destabilize your application leading to subtle change-detection and hydration bugs. Find more at https://github.com/angular/angularfire/blob/main/docs/zones.md\");\n    }\n    console.warn(`Firebase API called outside injection context: ${operation}(${original.name})`);\n  }\n}\n\nfunction runOutsideAngular<T>(fn: (...args: any[]) => T): T {\n  let ngZone: NgZone|undefined;\n  try {\n    ngZone = inject(NgZone);\n  } catch(e) {\n    warnOutsideInjectionContext(fn, \"runOutsideAngular\");\n  }\n  if (!ngZone) {return fn();}\n  return ngZone.runOutsideAngular(() => fn());\n}\n\nfunction run<T>(fn: (...args: any[]) => T): T {\n  let ngZone: NgZone|undefined;\n  try {\n    ngZone = inject(NgZone);\n  } catch(e) {\n    warnOutsideInjectionContext(fn, \"run\");\n  }\n  if (!ngZone) {return fn();}\n  return ngZone.run(() => fn());\n}\n\nexport function observeOutsideAngular<T>(obs$: Observable<T>): Observable<T> {\n  let schedulers: ɵAngularFireSchedulers|undefined;\n  try {\n    schedulers = getSchedulers();\n  } catch(e) {\n    warnOutsideInjectionContext(obs$, \"observeOutsideAngular\");\n  }\n  if (!schedulers) {return obs$;}\n  return obs$.pipe(observeOn(schedulers.outsideAngular));\n}\n\nexport function observeInsideAngular<T>(obs$: Observable<T>): Observable<T> {\n  let schedulers: ɵAngularFireSchedulers|undefined;\n  try {\n    schedulers = getSchedulers();\n  } catch(e) {\n    warnOutsideInjectionContext(obs$, \"observeInsideAngular\");\n  }\n  if (!schedulers) {return obs$;}\n  return obs$.pipe(observeOn(schedulers.insideAngular));\n}\n\nconst zoneWrapFn = (\n  it: (...args: any[]) => any,\n  taskDone: VoidFunction | undefined,\n  injector: Injector,\n) => {\n  return (...args: any[]) => {\n    if (taskDone) {\n      setTimeout(taskDone, 0);\n    }\n    return runInInjectionContext(injector, () => run(() => it.apply(this, args)));\n  };\n};\n\nexport const ɵzoneWrap = <T= unknown>(it: T, blockUntilFirst: boolean): T => {\n  // function() is needed for the arguments object\n  return function () {\n    let taskDone: VoidFunction | undefined;\n    const _arguments = arguments;\n    let schedulers: ɵAngularFireSchedulers;\n    let pendingTasks: PendingTasks;\n    let injector: Injector;\n    try {\n      schedulers = getSchedulers();\n      pendingTasks = inject(PendingTasks);\n      injector = inject(Injector);\n    } catch(e) {\n      warnOutsideInjectionContext(it, \"ɵzoneWrap\");\n      return (it as any).apply(this, _arguments);\n    }\n    // if this is a callback function, e.g, onSnapshot, we should create a pending task and complete it\n    // only once one of the callback functions is tripped.\n    for (let i = 0; i < arguments.length; i++) {\n      if (typeof _arguments[i] === 'function') {\n        if (blockUntilFirst) {\n          taskDone ||= run(() => pendingTasks.add());\n        }\n        // TODO create a microtask to track callback functions\n        _arguments[i] = zoneWrapFn(_arguments[i], taskDone, injector);\n      }\n    }\n    const ret = runOutsideAngular(() => (it as any).apply(this, _arguments));\n    if (!blockUntilFirst) {\n      if (ret instanceof Observable) {\n        return ret.pipe(\n          subscribeOn(schedulers.outsideAngular),\n          observeOn(schedulers.insideAngular),\n        );\n      } else {\n        return run(() => ret);\n      }\n    }\n    if (ret instanceof Observable) {\n      return ret.pipe(\n        subscribeOn(schedulers.outsideAngular),\n        observeOn(schedulers.insideAngular),\n        pendingUntilEvent(injector),\n      );\n    } else if (ret instanceof Promise) {\n      // eslint-disable-next-line @typescript-eslint/no-misused-promises\n      return run(\n        () =>\n          new Promise((resolve, reject) => {\n            pendingTasks.run(() => ret).then(\n              (it) => runInInjectionContext(injector, () => run(() => resolve(it))),\n              (reason) => runInInjectionContext(injector, () => run(() => reject(reason)))\n            );\n          })\n      );\n    } else if (typeof ret === 'function' && taskDone) {\n      // Handle unsubscribe\n      // function() is needed for the arguments object\n      return function () {\n        setTimeout(taskDone, 0);\n        return ret.apply(this, arguments);\n      };\n    } else {\n      // TODO how do we handle storage uploads in Zone? and other stuff with cancel() etc?\n      return run(() => ret);\n    }\n  } as any;\n};\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["this"],"mappings":"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"}